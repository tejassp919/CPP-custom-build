<snippet>
    <content><![CDATA[

#define LMAX 100005
const int lim=20;
int up[LMAX][lim];
int timer;
int tin[LMAX], tout[LMAX];
lli depth[LMAX];
 
void lcadfs(int v, int p, lli dep, vvi &adj)
{
    tin[v] = ++timer;
    depth[v]=dep;   up[v][0] = p;
    fol(i,1,lim)    up[v][i] = up[up[v][i-1]][i-1];

    forr (to, adj[v]) if (to != p)
            lcadfs(to, v, dep+1, adj);

    tout[v] = ++timer;
}
 
bool is_ancestor(int par, int v)    {
    return tin[par] <= tin[v] && tout[par] >= tout[v];
}
 
int lca(int u, int v)
{
    if (is_ancestor(u, v))  return u;
    if (is_ancestor(v, u))  return v;

    loop(i,lim-1,0)  
        if (!is_ancestor(up[u][i], v))
            u = up[u][i];
    
    return up[u][0];
}
 
lli dist(int u, int v)
{
    int x=lca(u,v);
    return ((depth[u]-depth[x])+(depth[v]-depth[x]));
}

]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
     <tabTrigger>LCA</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <scope>source.c++</scope>
</snippet>